{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The game is Rock, Paper, Scissors. First, the user is asked how many games they want to play and for their move. Computer then generates its move randomly. There are two functions: First functions takes input from user, validates it and then randomnly chooses the computer move. \n",
    "Second Function calculates the winner using conditional statements and loops and returns the value to the main functions. \n",
    "In the main functions, final calculation are done.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter the number of round to play, from 1 - 9: 3\n",
      "Round number 1\n",
      " Enter your move: rock\n",
      "Computer Move:  Scissors\n",
      "The winner for round:  User\n",
      "User Win:  0\n",
      "Comp Win:  0\n",
      "Total Tie:  1\n",
      "----------------------\n",
      "Round number 2\n",
      " Enter your move: Rock\n",
      "Computer Move:  Paper\n",
      "The winner for round:  Computer\n",
      "User Win:  0\n",
      "Comp Win:  0\n",
      "Total Tie:  2\n",
      "----------------------\n",
      "Round number 3\n",
      " Enter your move: Paper\n",
      "Computer Move:  Paper\n",
      "The winner for round:  Tie\n",
      "User Win:  0\n",
      "Comp Win:  0\n",
      "Total Tie:  3\n",
      "----------------------\n",
      "The Game is tied\n",
      "Total Computer wins: 0 || Total Player Wins:  0 || Total Tie Games: 3\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "\n",
    "def main():\n",
    "\n",
    "    while True:\n",
    "        no_games = int(input(\"Enter the number of round to play, from 1 - 9: \")) #The while loop here ensures that the user enters only valid numbers. If the user fails to input number within 1 to 9, the program will keep asking the user to input values till valid. \n",
    "        if (no_games > 0 and no_games < 10):\n",
    "            break \n",
    "\n",
    "# In the following code; the program will keep the tally of the total games played and total wins of user, computer and total ties. It will also stop the loop if either user or the computer win more than majority of the game. \n",
    "    user_wins = 0\n",
    "    comp_wins = 0\n",
    "    tie = 0\n",
    "    for n in  range(no_games):\n",
    "        print (\"Round number\", n+1)    # The range starts with 0 but for consistency in printing\n",
    "        (user_move, comp_move) = get_user_comp_move() #calling the function get_user_comp_move to get the user and computer move.\n",
    "        winner = calculate_winner(user_move, comp_move) #Calling function calculate_winner to calculate the winner of each rounds. \n",
    "        print (\"The winner for round: \", winner)\n",
    "        if winner == \"user\":\n",
    "            user_wins = user_wins + 1 #Keeping the tally of user wins\n",
    "        elif winner ==\"computer\":\n",
    "            comp_wins = comp_wins + 1 #Keeping the tally of computer wins\n",
    "        else:\n",
    "            tie = tie + 1             #Keeping the tally of tie games\n",
    "        print (\"User Win: \", user_wins)\n",
    "        print (\"Comp Win: \", comp_wins)\n",
    "        print (\"Total Tie: \", tie)\n",
    "        print (\"----------------------\")\n",
    "\n",
    "\n",
    "        if (user_wins > ((no_games/2)+ 1)) or (comp_wins > ((no_games/2)+ 1)): #Break the loop if there either user or the computer win more than majority of the game\n",
    "            break\n",
    "    if user_wins> comp_wins:\n",
    "        print (\"The player is the winner\",)\n",
    "        print (\"Player:\", user_wins, \"||\", \"Computer: \", comp_wins, \"||\",\" Tie:\", tie)\n",
    "    elif comp_wins> user_wins:\n",
    "        print (\"Computer is the winner\",)\n",
    "        print (\"Total Computer wins:\", comp_wins, \"||\", \"Total Player Wins: \", user_wins,\"||\",\" Tie:\", tie)\n",
    "    else:\n",
    "        print (\"The Game is tied\",)\n",
    "        print (\"Total Computer wins:\", comp_wins, \"||\", \"Total Player Wins: \", user_wins,\"||\",\"Total Tie Games:\", tie)   \n",
    "\n",
    "# First call the function get_user_comp_move. This function first takes the input from the user for their move, checks its validation and generates computer's move randonmly. \n",
    "\n",
    "def get_user_comp_move():\n",
    "    answers_accept = [\"Rock\", \"Paper\", \"Scissors\"]    \n",
    "    while True:\n",
    "        user_move = str(input (\" Enter your move: \").capitalize()) #.title maintains consistency in the input variables\n",
    "        if user_move in answers_accept:\n",
    "            break                                             #loop breaks only if the player's input is limited to rock,paper, scissors\n",
    "    comp_move = random.choice(answers_accept)                 # Computer randonly generates its move from the list of Rock, Paper, Scissors\n",
    "    print (\"Computer Move: \", comp_move)\n",
    "    return (user_move, comp_move)                             # Values are then returned to the main functions \n",
    "\n",
    "#This function now uses the input from the functions above (get_user_comp_move) and calculates the winner. It then returns the value to the main functions for other caluclations. \n",
    "\n",
    "def calculate_winner (user, computer):\n",
    "    if user == \"Rock\":\n",
    "        if computer == \"Paper\":\n",
    "            return (\"Computer\")\n",
    "        elif computer == \"Scissors\":\n",
    "            return (\"User\")\n",
    "        else:\n",
    "            return(\"Tie\")\n",
    "\n",
    "    elif user == \"Paper\":\n",
    "        if computer == \"Rock\":\n",
    "            return (\"Computer\")\n",
    "        elif computer == \"Scissors\":\n",
    "            return (\"User\")\n",
    "        else:\n",
    "            return(\"Tie\")\n",
    "\n",
    "    elif user == \"Scissors\":\n",
    "        if computer == \"Rock\":\n",
    "            return (\"Computer\")\n",
    "        elif computer == \"Paper\":\n",
    "            return (\"User\")\n",
    "        else:\n",
    "             return (\"Tie\")\n",
    "\n",
    "\n",
    "main()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
